{"version":3,"sources":["navigation/CustomMenu.js","navigation/utils.js","navigation/Breadcrumbs.js","constants/index.js","navigation/Page.js","App.js","views/Categories/index.js","views/Devices/index.js","views/Types/index.js","views/Product/index.js","routes/index.js","views/HomePage/index.js","index.js"],"names":["CustomMenu","Menu","stackable","Item","src","alt","name","to","className","combinePaths","parent","child","replace","buildPaths","routes","parentPath","map","route","path","setupParents","parentRoute","withParent","flattenRoutes","flat","Infinity","pathTo","Breadcrumbs","formattedPath","useLocation","pathname","slice","split","allVisitedPaths","length","forEach","_","index","push","join","crumb","breadcrumbs","label","API_CALL_STATUS","Page","useState","response","setResponse","status","setStatus","message","setMessage","history","useHistory","useEffect","axios","get","location","then","res","data","catch","error","PageBody","component","App","basename","Categories","Grid","Row","Dimmer","active","Loader","inverted","size","Message","Header","Content","key","asset","value","Card","onClick","Image","wrapped","ui","textAlign","as","info","Devices","Types","details","isAvailableToShip","isAvailableAtNearByStores","Column","width","overview","Icon","color","Product","appRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9daae99.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\n\n// style\nimport \"./style.css\";\n\nconst CustomMenu = () => (\n  <Menu stackable>\n    <Menu.Item>\n      <img src=\"https://react.semantic-ui.com/logo.png\" alt=\"icon\" />\n    </Menu.Item>\n    <Menu.Item name=\"Devices\">\n      <NavLink to=\"/devices\" className=\"custom-nav-link\">\n        Devices\n      </NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nexport default CustomMenu;\n","/**\n * Combine paths\n *\n * @param {string} parent\n * @param {string} child\n * @returns {string}\n */\nexport const combinePaths = (parent, child) =>\n  `${parent.replace(/\\/$/, \"\")}/${child.replace(/^\\//, \"\")}`;\n\n/**\n * Recursively build paths for each navigation item\n *\n * @param routes\n * @param {string} parentPath\n * @returns {*}\n */\nexport const buildPaths = (routes, parentPath = \"\") =>\n  routes.map((route) => {\n    const path = combinePaths(parentPath, route.path);\n    return {\n      ...route,\n      path,\n      ...(route.routes && { routes: buildPaths(route.routes, path) }),\n    };\n  });\n\n/**\n * Recursively provide parent reference for each navigation item\n *\n * @param routes\n * @param parentRoute\n * @returns {*}\n */\nexport const setupParents = (routes, parentRoute = null) =>\n  routes.map((route) => {\n    const withParent = {\n      ...route,\n      ...(parentRoute && { parent: parentRoute }),\n    };\n\n    return {\n      ...withParent,\n      ...(withParent.routes && {\n        routes: setupParents(withParent.routes, withParent),\n      }),\n    };\n  });\n\n/**\n * Convert navigation tree into flat array\n *\n * @param routes\n * @returns {any[]}\n */\nexport const flattenRoutes = (routes) =>\n  routes\n    .map((route) => [route.routes ? flattenRoutes(route.routes) : [], route])\n    .flat(Infinity);\n\n/**\n * Combine all the above functions together\n *\n * @param routes\n * @returns {any[]}\n */\nexport const generateAppRoutes = (routes) =>\n  flattenRoutes(setupParents(buildPaths(routes)));\n\n/**\n * Provides path from root to the element\n *\n * @param route\n * @returns {any[]}\n */\nexport const pathTo = (route) => {\n  if (!route.parent) {\n    return [route];\n  }\n\n  return [...pathTo(route.parent), route];\n};\n","import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { pathTo } from \"./utils\";\n\nconst Breadcrumbs = ({ route }) => {\n  const location = useLocation();\n\n  const currentPath = location.pathname;\n\n  const formattedPath = currentPath.slice(1).split(\"/\");\n\n  let allVisitedPaths = [];\n\n  if (!!formattedPath.length) {\n    formattedPath.forEach((_, index) =>\n      allVisitedPaths.push(formattedPath.slice(0, index + 1).join(\"/\"))\n    );\n  }\n\n  return (\n    <nav className=\"breadcrumbs\">\n      {pathTo(route).map((crumb, index, breadcrumbs) => {\n        return (\n          <div key={index} className=\"item\">\n            {index < breadcrumbs.length - 1 && (\n              <NavLink\n                to={index > 0 ? `/${allVisitedPaths[index - 1]}` : crumb.path}\n              >\n                {crumb.label}\n              </NavLink>\n            )}\n            {index === breadcrumbs.length - 1 && crumb.label}\n          </div>\n        );\n      })}\n    </nav>\n  );\n};\n\nexport default Breadcrumbs;\n","// shared values across app\n\nexport const API_CALL_STATUS = {\n  LOADING: \"loading\",\n  ERROR: \"error\",\n  SUCCEEDED: \"succeeded\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomMenu from \"./CustomMenu\";\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport { API_CALL_STATUS } from \"../constants\";\n\nconst Page = ({ route }) => {\n  const [response, setResponse] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setStatus(API_CALL_STATUS.LOADING);\n\n    axios\n      .get(`/api/v1/${history.location.pathname}`)\n      .then((res) => {\n        setResponse(res.data);\n        setStatus(API_CALL_STATUS.SUCCEEDED);\n      })\n      .catch((error) => {\n        setResponse([]);\n        setStatus(API_CALL_STATUS.ERROR);\n        setMessage(error.message);\n      });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const PageBody = route.component;\n\n  return (\n    <>\n      <CustomMenu />\n      {route.parent && <Breadcrumbs route={route} />}\n      <PageBody data={response} status={status} message={message} />\n    </>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Page from \"./navigation/Page\";\n\nconst App = ({ routes }) => (\n  <BrowserRouter basename=\"/\">\n    <Switch>\n      {routes.map((route) => (\n        <Route key={route.path} path={route.path}>\n          <Page route={route} />\n        </Route>\n      ))}\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Grid, Message, Card, Image, Dimmer, Loader } from \"semantic-ui-react\";\nimport { API_CALL_STATUS } from \"../../constants\";\n\nconst Categories = ({ data = [], status, message }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <Grid className=\"component-grid\" stackable>\n      <Grid.Row>\n        {status === API_CALL_STATUS.LOADING ? (\n          <Dimmer active className=\"dimmer-loader\">\n            <Loader inverted size=\"massive\">\n              Loading\n            </Loader>\n          </Dimmer>\n        ) : status === API_CALL_STATUS.ERROR ? (\n          <Message\n            error\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header> Oops! Something went wrong!</Message.Header>\n            <Message.Content>{message}</Message.Content>\n          </Message>\n        ) : status === API_CALL_STATUS.SUCCEEDED && data.length > 0 ? (\n          data.map(({ key, asset, value }) => {\n            return (\n              <Card\n                key={key}\n                className=\"custom-card\"\n                onClick={() => {\n                  history.push(`${location.pathname}/${key}`);\n                }}\n              >\n                <Image src={asset} wrapped ui={false} />\n                <Card.Header\n                  className=\"capitalize custom-card-header\"\n                  textAlign=\"center\"\n                  as=\"h2\"\n                >\n                  {value}\n                </Card.Header>\n              </Card>\n            );\n          })\n        ) : (\n          <Message\n            info\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header>No Data Found!</Message.Header>\n          </Message>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Categories;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Grid, Message, Card, Image, Dimmer, Loader } from \"semantic-ui-react\";\nimport { API_CALL_STATUS } from \"../../constants\";\n\nconst Devices = ({ data = [], status, message }) => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <Grid className=\"component-grid\" stackable>\n      <Grid.Row>\n        {status === API_CALL_STATUS.LOADING ? (\n          <Dimmer active className=\"dimmer-loader\">\n            <Loader inverted size=\"massive\">\n              Loading\n            </Loader>\n          </Dimmer>\n        ) : status === API_CALL_STATUS.ERROR ? (\n          <Message\n            error\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header> Oops! Something went wrong!</Message.Header>\n            <Message.Content>{message}</Message.Content>\n          </Message>\n        ) : status === API_CALL_STATUS.SUCCEEDED && data.length > 0 ? (\n          data.map(({ key, asset, value }) => {\n            return (\n              <Card\n                key={key}\n                className=\"custom-card\"\n                onClick={() => {\n                  history.push(`${location.pathname}/${key}`);\n                }}\n              >\n                <Image src={asset} wrapped ui={false} />\n                <Card.Header\n                  className=\"capitalize custom-card-header\"\n                  textAlign=\"center\"\n                  as=\"h2\"\n                >\n                  {value}\n                </Card.Header>\n              </Card>\n            );\n          })\n        ) : (\n          <Message\n            info\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header>No Data Found!</Message.Header>\n          </Message>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Devices;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Grid, Message, Card, Image, Dimmer, Loader } from \"semantic-ui-react\";\nimport { API_CALL_STATUS } from \"../../constants\";\n\n// style\n// import \"./style.css\";\n\nconst Types = ({ data = [], status, message }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <Grid className=\"component-grid\" stackable>\n      <Grid.Row>\n        {status === API_CALL_STATUS.LOADING ? (\n          <Dimmer active className=\"dimmer-loader\">\n            <Loader inverted size=\"massive\">\n              Loading\n            </Loader>\n          </Dimmer>\n        ) : status === API_CALL_STATUS.ERROR ? (\n          <Message\n            error\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header> Oops! Something went wrong!</Message.Header>\n            <Message.Content>{message}</Message.Content>\n          </Message>\n        ) : status === API_CALL_STATUS.SUCCEEDED && data.length > 0 ? (\n          data.map(({ key, asset, value }) => {\n            return (\n              <Card\n                key={key}\n                className=\"custom-card\"\n                onClick={() => {\n                  history.push(`${location.pathname}/${key}`);\n                }}\n              >\n                <Image src={asset} wrapped ui={false} />\n                <Card.Header\n                  className=\"capitalize custom-card-header\"\n                  textAlign=\"center\"\n                  as=\"h2\"\n                >\n                  {value}\n                </Card.Header>\n              </Card>\n            );\n          })\n        ) : (\n          <Message\n            info\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header>No Data Found!</Message.Header>\n          </Message>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Types;\n","import React from \"react\";\nimport {\n  Grid,\n  Message,\n  Header,\n  Image,\n  Dimmer,\n  Loader,\n  Icon,\n} from \"semantic-ui-react\";\nimport { API_CALL_STATUS } from \"../../constants\";\n\nconst Devices = ({ data = {}, status, message }) => {\n  const {\n    asset,\n    details,\n    value,\n    isAvailableToShip,\n    isAvailableAtNearByStores,\n  } = data;\n\n  return (\n    <Grid className=\"component-grid\" stackable>\n      <Grid.Row>\n        {status === API_CALL_STATUS.LOADING ? (\n          <Dimmer active className=\"dimmer-loader\">\n            <Loader inverted size=\"massive\">\n              Loading\n            </Loader>\n          </Dimmer>\n        ) : status === API_CALL_STATUS.ERROR ? (\n          <Message\n            error\n            size=\"massive\"\n            className=\"margin-auto text-align-center\"\n          >\n            <Message.Header> Oops! Something went wrong!</Message.Header>\n            <Message.Content>{message}</Message.Content>\n          </Message>\n        ) : (\n          status === API_CALL_STATUS.SUCCEEDED && (\n            <>\n              <Grid.Column width={6}>\n                <Image src={asset} wrapped ui={false} />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header as=\"h2\">{value}</Header>\n                <br />\n                {details.overview}\n                <br />\n                <br />\n                <b> Available to ship </b>{\" \"}\n                <Icon\n                  name={isAvailableToShip ? \"checkmark\" : \"cancel\"}\n                  color={isAvailableToShip ? \"green\" : \"red\"}\n                />\n                <br />\n                <b> Available at nearby stores </b>{\" \"}\n                <Icon\n                  name={isAvailableAtNearByStores ? \"checkmark\" : \"cancel\"}\n                  color={isAvailableAtNearByStores ? \"green\" : \"red\"}\n                />\n              </Grid.Column>\n            </>\n          )\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Devices;\n","import { Categories, Devices, HomePage, Product, Types } from \"../views\";\n\nconst routes = [\n  {\n    path: \"/\",\n    label: \"Home\",\n    component: HomePage,\n    routes: [\n      {\n        path: \"/devices\",\n        label: \"Devices\",\n        component: Devices,\n        routes: [\n          {\n            path: \"/:categories\",\n            label: \"Categories\",\n            component: Categories,\n            routes: [\n              {\n                path: \"/:types\",\n                label: \"Types\",\n                component: Types,\n                routes: [\n                  {\n                    path: \"/:product\",\n                    label: \"Product\",\n                    component: Product,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Grid, Header, Message } from \"semantic-ui-react\";\n\n// style\nimport \"./style.css\";\n\nconst HomePage = () => (\n  <Grid>\n    <Grid.Row>\n      <Grid.Column>\n        <Header as=\"h2\" textAlign=\"center\" className=\"home-page-header\">\n          Welcome to the simple http server App!\n        </Header>\n        <br />\n        <Message info size=\"huge\">\n          <Message.Content className=\"home-page-message-content\">\n            Please hit <b> Devices </b> to try breadcrumb functionality!\n          </Message.Content>\n        </Message>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nexport default HomePage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport routes from \"./routes\";\nimport { generateAppRoutes } from \"./navigation/utils\";\n\n// styles\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nconst appRoutes = generateAppRoutes(routes);\n\nReactDOM.render(<App routes={appRoutes} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}